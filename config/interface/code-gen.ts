import { toInterfaceArg } from './types'
import { printInterface } from './printer'
import fs from 'fs'
import dedent from 'dedent'

// Generate interface for a contract
export async function generateInterfaceForContract(contract: string) {
  return printInterface(await toInterfaceArg(contract))
}

// Generate file with interface for all contracts
export async function generateFile() {
  const path = 'config/interface/index.ts'
  // TODO: generate interface for all contracts
  const content = await Promise.all([generateInterfaceForContract('Pool'), generateInterfaceForContract('Asset')])
  const file = fileHeader() + content.join('\n\n') + fileFooter()
  fs.writeFileSync(path, file)
}

function fileHeader(): string {
  return dedent`
    // This file is generated by wombat. Do not edit.
    // To regenerate, run \`yarn generate_interface\`.

    import { BigNumberish } from 'ethers'
    import { DeploymentOrAddress } from '../../types'
    \n
  `
}

function fileFooter(): string {
  return '\n' // new line at the end of file
}
