{
  "address": "0xa155EaA43DE12fA4427F995dA53a4Fc5373f4b34",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "accountName_",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isStable_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "accountName_",
          "type": "string"
        }
      ],
      "name": "setAccountName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3b10102cd3b7bd17d2e3f30ea3b8ac53db27acb504136398d7124317ac803be7",
  "receipt": {
    "to": null,
    "from": "0x1f30d1eFafdfb20AF5fAC55254A115D2B0E8D410",
    "contractAddress": "0xa155EaA43DE12fA4427F995dA53a4Fc5373f4b34",
    "transactionIndex": 0,
    "gasUsed": "539780",
    "logsBloom": "0x00000000000004000000000000004000000000000000000000800000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000400000000000000000000000000000000010000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x61f5b10ba7cd7097204bb2b1a7fa709ef78394f8c5f0aeee95cf1196a0c44d18",
    "transactionHash": "0x3b10102cd3b7bd17d2e3f30ea3b8ac53db27acb504136398d7124317ac803be7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1336608,
        "transactionHash": "0x3b10102cd3b7bd17d2e3f30ea3b8ac53db27acb504136398d7124317ac803be7",
        "address": "0xa155EaA43DE12fA4427F995dA53a4Fc5373f4b34",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001f30d1efafdfb20af5fac55254a115d2b0e8d410"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x61f5b10ba7cd7097204bb2b1a7fa709ef78394f8c5f0aeee95cf1196a0c44d18"
      }
    ],
    "blockNumber": 1336608,
    "cumulativeGasUsed": "539780",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "ETH_Aggregate",
    false
  ],
  "solcInputHash": "90db8cc53bd2911a81fe521a3239f9b0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"accountName_\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isStable_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"accountName_\",\"type\":\"string\"}],\"name\":\"setAccountName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Aggregate Account needs to be set for Asset\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"accountName_\":\"The name of the aggregate account\",\"isStable_\":\"Tells if this aggregate holds stable assets or not\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAccountName(string)\":{\"params\":{\"accountName_\":\"the new name\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"isStable\":{\"details\":\"will be needed for interpool swapping\"}},\"title\":\"AggregateAccount\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accountName()\":{\"notice\":\"name of the account. E.g BTC for aggregate account containing zBTC, BTC.e, ETH etc.\"},\"constructor\":{\"notice\":\"Constructor.\"},\"isStable()\":{\"notice\":\"true if the assets represented by the aggregate are stablecoins\"},\"setAccountName(string)\":{\"notice\":\"Changes Account Name. Can only be set by the contract owner.\"}},\"notice\":\"AggregateAccount represents groups of assets\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/asset/AggregateAccount.sol\":\"AggregateAccount\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/asset/AggregateAccount.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.5;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\n/**\\n * @title AggregateAccount\\n * @notice AggregateAccount represents groups of assets\\n * @dev Aggregate Account needs to be set for Asset\\n */\\ncontract AggregateAccount is Ownable {\\n    /// @notice name of the account. E.g BTC for aggregate account containing zBTC, BTC.e, ETH etc.\\n    string public accountName;\\n\\n    /// @notice true if the assets represented by the aggregate are stablecoins\\n    /// @dev will be needed for interpool swapping\\n    bool public isStable;\\n\\n    /**\\n     * @notice Constructor.\\n     * @param accountName_ The name of the aggregate account\\n     * @param isStable_ Tells if this aggregate holds stable assets or not\\n     */\\n    constructor(string memory accountName_, bool isStable_) {\\n        accountName = accountName_;\\n        isStable = isStable_;\\n    }\\n\\n    /**\\n     * @notice Changes Account Name. Can only be set by the contract owner.\\n     * @param accountName_ the new name\\n     */\\n    function setAccountName(string memory accountName_) external onlyOwner {\\n        require(bytes(accountName_).length > 0, 'Wombat: Aggregate account name cannot be zero');\\n        accountName = accountName_;\\n    }\\n}\\n\",\"keccak256\":\"0xa53740b488da6fe3d009a7373c95222e33ba3da3dda3020750bc812246971744\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000a9238038062000a92833981016040819052620000349162000179565b6200003f336200006d565b815162000054906001906020850190620000bd565b506002805460ff191691151591909117905550620002bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000cb906200026a565b90600052602060002090601f016020900481019282620000ef57600085556200013a565b82601f106200010a57805160ff19168380011785556200013a565b828001600101855582156200013a579182015b828111156200013a5782518255916020019190600101906200011d565b50620001489291506200014c565b5090565b5b808211156200014857600081556001016200014d565b805180151581146200017457600080fd5b919050565b600080604083850312156200018d57600080fd5b82516001600160401b0380821115620001a557600080fd5b818501915085601f830112620001ba57600080fd5b815181811115620001cf57620001cf620002a7565b604051601f8201601f19908116603f01168101908382118183101715620001fa57620001fa620002a7565b816040528281526020935088848487010111156200021757600080fd5b600091505b828210156200023b57848201840151818301850152908301906200021c565b828211156200024d5760008484830101525b95506200025f91505085820162000163565b925050509250929050565b600181811c908216806200027f57607f821691505b60208210811415620002a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6107c580620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100b6578063c5e57985146100de578063f2fde38b146100f357600080fd5b806309047bdd146100775780632e95adad14610099578063715018a6146100ae575b600080fd5b6002546100849060ff1681565b60405190151581526020015b60405180910390f35b6100ac6100a73660046105ca565b610106565b005b6100ac610234565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610090565b6100e66102c1565b6040516100909190610699565b6100ac61010136600461058d565b61034f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600081511161021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f506c6174797075733a20416767726567617465206163636f756e74206e616d6560448201527f2063616e6e6f74206265207a65726f00000000000000000000000000000000006064820152608401610183565b80516102309060019060208401906104f4565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610183565b6102bf600061047f565b565b600180546102ce9061070c565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa9061070c565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610183565b73ffffffffffffffffffffffffffffffffffffffff8116610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610183565b61047c8161047f565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546105009061070c565b90600052602060002090601f0160209004810192826105225760008555610568565b82601f1061053b57805160ff1916838001178555610568565b82800160010185558215610568579182015b8281111561056857825182559160200191906001019061054d565b50610574929150610578565b5090565b5b808211156105745760008155600101610579565b60006020828403121561059f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105c357600080fd5b9392505050565b6000602082840312156105dc57600080fd5b813567ffffffffffffffff808211156105f457600080fd5b818401915084601f83011261060857600080fd5b81358181111561061a5761061a610760565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561066057610660610760565b8160405282815287602084870101111561067957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156106c6578581018301518582016040015282016106aa565b818111156106d8576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061072057607f821691505b6020821081141561075a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122036f11f4aa5896e562ec87208603904fb3f1e8f54f810e85b49de948c92ead0c264736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100b6578063c5e57985146100de578063f2fde38b146100f357600080fd5b806309047bdd146100775780632e95adad14610099578063715018a6146100ae575b600080fd5b6002546100849060ff1681565b60405190151581526020015b60405180910390f35b6100ac6100a73660046105ca565b610106565b005b6100ac610234565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610090565b6100e66102c1565b6040516100909190610699565b6100ac61010136600461058d565b61034f565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600081511161021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f506c6174797075733a20416767726567617465206163636f756e74206e616d6560448201527f2063616e6e6f74206265207a65726f00000000000000000000000000000000006064820152608401610183565b80516102309060019060208401906104f4565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610183565b6102bf600061047f565b565b600180546102ce9061070c565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa9061070c565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610183565b73ffffffffffffffffffffffffffffffffffffffff8116610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610183565b61047c8161047f565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546105009061070c565b90600052602060002090601f0160209004810192826105225760008555610568565b82601f1061053b57805160ff1916838001178555610568565b82800160010185558215610568579182015b8281111561056857825182559160200191906001019061054d565b50610574929150610578565b5090565b5b808211156105745760008155600101610579565b60006020828403121561059f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105c357600080fd5b9392505050565b6000602082840312156105dc57600080fd5b813567ffffffffffffffff808211156105f457600080fd5b818401915084601f83011261060857600080fd5b81358181111561061a5761061a610760565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561066057610660610760565b8160405282815287602084870101111561067957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156106c6578581018301518582016040015282016106aa565b818111156106d8576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061072057607f821691505b6020821081141561075a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122036f11f4aa5896e562ec87208603904fb3f1e8f54f810e85b49de948c92ead0c264736f6c63430008050033",
  "devdoc": {
    "details": "Aggregate Account needs to be set for Asset",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "accountName_": "The name of the aggregate account",
          "isStable_": "Tells if this aggregate holds stable assets or not"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAccountName(string)": {
        "params": {
          "accountName_": "the new name"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "isStable": {
        "details": "will be needed for interpool swapping"
      }
    },
    "title": "AggregateAccount",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accountName()": {
        "notice": "name of the account. E.g BTC for aggregate account containing zBTC, BTC.e, ETH etc."
      },
      "constructor": {
        "notice": "Constructor."
      },
      "isStable()": {
        "notice": "true if the assets represented by the aggregate are stablecoins"
      },
      "setAccountName(string)": {
        "notice": "Changes Account Name. Can only be set by the contract owner."
      }
    },
    "notice": "AggregateAccount represents groups of assets",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 392,
        "contract": "contracts/asset/AggregateAccount.sol:AggregateAccount",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1727,
        "contract": "contracts/asset/AggregateAccount.sol:AggregateAccount",
        "label": "accountName",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 1730,
        "contract": "contracts/asset/AggregateAccount.sol:AggregateAccount",
        "label": "isStable",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}