{
  "address": "0x3c0829fd5B56691feE6806086E89c83FfC071fc5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPriceAgeBound",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxPriceAgeBound",
          "type": "uint256"
        }
      ],
      "name": "SetMaxPriceAgeBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IPriceFeed",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "UpdateFallbackPriceFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeed",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxPriceAge",
          "type": "uint256"
        }
      ],
      "name": "UpdatePriceFeed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "fallbackPriceFeed",
      "outputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxPriceAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPriceAgeBound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxPriceAge",
          "type": "uint256"
        }
      ],
      "name": "setChainlinkUsdPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceFeed",
          "name": "_fallbackPriceFeed",
          "type": "address"
        }
      ],
      "name": "setFallbackPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPriceAgeBound",
          "type": "uint256"
        }
      ],
      "name": "setMaxPriceAgeBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdPriceFeeds",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb7baa0f952a0193c12d696d67ac433de86ae52718a3e8d111b4c478bb8d28c04",
  "receipt": {
    "to": null,
    "from": "0xDB9f9Be4D6A033d622f6785BA6F8c3680dEC2452",
    "contractAddress": "0x3c0829fd5B56691feE6806086E89c83FfC071fc5",
    "transactionIndex": 0,
    "gasUsed": "574845",
    "logsBloom": "0x
    "blockHash": "0xd5ebc0fe9b530548cc3d02c77bc900bfd11d754c83ae2b814431c9de8e338323",
    "transactionHash": "0xb7baa0f952a0193c12d696d67ac433de86ae52718a3e8d111b4c478bb8d28c04",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 30329414,
        "transactionHash": "0xb7baa0f952a0193c12d696d67ac433de86ae52718a3e8d111b4c478bb8d28c04",
        "address": "0x3c0829fd5B56691feE6806086E89c83FfC071fc5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000db9f9be4d6a033d622f6785ba6f8c3680dec2452"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd5ebc0fe9b530548cc3d02c77bc900bfd11d754c83ae2b814431c9de8e338323"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 30329414,
        "transactionHash": "0xb7baa0f952a0193c12d696d67ac433de86ae52718a3e8d111b4c478bb8d28c04",
        "address": "0x3c0829fd5B56691feE6806086E89c83FfC071fc5",
        "topics": [
          "0xdbf066993ca6a3a38bfd6eb48f33d3ecd4f034d6f720786ec998d16a8a213bd2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000015180",
        "logIndex": 1,
        "blockHash": "0xd5ebc0fe9b530548cc3d02c77bc900bfd11d754c83ae2b814431c9de8e338323"
      }
    ],
    "blockNumber": 30329414,
    "cumulativeGasUsed": "574845",
    "status": 1,
    "byzantium": true
  },
  "args": [
    86400
  ],
  "numDeployments": 1,
  "solcInputHash": "677157ab1959102ac614f15c41c6b273",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPriceAgeBound\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPriceAgeBound\",\"type\":\"uint256\"}],\"name\":\"SetMaxPriceAgeBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPriceFeed\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"UpdateFallbackPriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPriceAge\",\"type\":\"uint256\"}],\"name\":\"UpdatePriceFeed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fallbackPriceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxPriceAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriceAgeBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxPriceAge\",\"type\":\"uint256\"}],\"name\":\"setChainlinkUsdPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"_fallbackPriceFeed\",\"type\":\"address\"}],\"name\":\"setFallbackPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPriceAgeBound\",\"type\":\"uint256\"}],\"name\":\"setMaxPriceAgeBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdPriceFeeds\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Chainlink Price Feed\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fallbackPriceFeed()\":{\"notice\":\"the fallback price feed in case the price is not available on Pyth\"},\"getLatestPrice(address)\":{\"notice\":\"Returns the latest price.\"}},\"notice\":\"Contract to get the latest prices for multiple tokens from Chainlink\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wombat-core/asset/ChainlinkPriceFeed.sol\":\"ChainlinkPriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/wombat-core/asset/ChainlinkPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.5;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nimport './OraclePriceFeed.sol';\\n\\n/**\\n * @title Chainlink Price Feed\\n * @notice Contract to get the latest prices for multiple tokens from Chainlink\\n */\\ncontract ChainlinkPriceFeed is OraclePriceFeed {\\n    mapping(IERC20 => AggregatorV3Interface) public usdPriceFeeds;\\n    mapping(IERC20 => uint256) public maxPriceAge;\\n\\n    event UpdatePriceFeed(IERC20 token, AggregatorV3Interface priceFeed, uint256 maxPriceAge);\\n\\n    constructor(uint256 _maxPriceAgeBound) OraclePriceFeed(_maxPriceAgeBound) {}\\n\\n    /**\\n     * Returns the latest price.\\n     */\\n    function getLatestPrice(IERC20 _token) external view returns (uint256 price) {\\n        AggregatorV3Interface priceFeed = usdPriceFeeds[_token];\\n        // prettier-ignore\\n        (\\n            /* uint80 roundID */,\\n            int256 answer,\\n            /* uint startedAt */,\\n            uint256 updatedAt,\\n            /* uint80 answeredInRound */\\n        ) = priceFeed.latestRoundData();\\n\\n        if (block.timestamp - updatedAt > maxPriceAge[_token]) {\\n            return _getFallbackPrice(_token);\\n        } else {\\n            require(answer > 0);\\n            return (uint256(answer) * 1e18) / 10 ** (priceFeed.decimals());\\n        }\\n    }\\n\\n    function setChainlinkUsdPriceFeed(\\n        IERC20 _token,\\n        AggregatorV3Interface _priceFeed,\\n        uint256 _maxPriceAge\\n    ) external onlyOwner {\\n        require(_maxPriceAge <= maxPriceAgeBound, 'invalid _maxPriceAge');\\n        usdPriceFeeds[_token] = _priceFeed;\\n        maxPriceAge[_token] = _maxPriceAge;\\n        emit UpdatePriceFeed(_token, _priceFeed, _maxPriceAge);\\n    }\\n}\\n\",\"keccak256\":\"0xd76ee90029c851f25be6dd3dcb68ed6b9e94d42df5b36444824ec94dcbde225a\",\"license\":\"BUSL-1.1\"},\"contracts/wombat-core/asset/OraclePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.5;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nimport '../interfaces/IPriceFeed.sol';\\n\\n/**\\n * @title Chainlink Price Feed\\n * @notice Contract to get the latest prices for multiple tokens from Chainlink\\n */\\nabstract contract OraclePriceFeed is IPriceFeed, Ownable {\\n    /// @notice the fallback price feed in case the price is not available on Pyth\\n    IPriceFeed public fallbackPriceFeed;\\n    uint256 public maxPriceAgeBound;\\n\\n    event SetMaxPriceAgeBound(uint256 maxPriceAgeBound);\\n    event UpdateFallbackPriceFeed(IPriceFeed priceFeed);\\n\\n    constructor(uint256 _maxPriceAgeBound) {\\n        setMaxPriceAgeBound(_maxPriceAgeBound);\\n    }\\n\\n    function _getFallbackPrice(IERC20 _token) internal view returns (uint256 price) {\\n        if (fallbackPriceFeed != IPriceFeed(address(0))) {\\n            return fallbackPriceFeed.getLatestPrice(_token);\\n        } else {\\n            revert('Price is too old');\\n        }\\n    }\\n\\n    function setFallbackPriceFeed(IPriceFeed _fallbackPriceFeed) external onlyOwner {\\n        fallbackPriceFeed = _fallbackPriceFeed;\\n        emit UpdateFallbackPriceFeed(_fallbackPriceFeed);\\n    }\\n\\n    function setMaxPriceAgeBound(uint256 _maxPriceAgeBound) public onlyOwner {\\n        maxPriceAgeBound = _maxPriceAgeBound;\\n        emit SetMaxPriceAgeBound(_maxPriceAgeBound);\\n    }\\n\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xe43a05b48f18c9f0e7a78053ac41e5bd6e8851d287117c14e23740c57171e954\",\"license\":\"BUSL-1.1\"},\"contracts/wombat-core/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.5;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\ninterface IPriceFeed {\\n    /**\\n     * @notice return price of the asset in 18 decimals\\n     */\\n    function getLatestPrice(IERC20 _token) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe70b2abd69cabdefd722b1b007c85c306159b9f5db08a917ee216f319d58b441\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080346100c257601f61097a38819003918201601f19168301916001600160401b038311848410176100c7578084926020946040528339810103126100c2575160008054336001600160a01b03198216811783557fdbf066993ca6a3a38bfd6eb48f33d3ecd4f034d6f720786ec998d16a8a213bd29360209390926001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a380600255604051908152a160405161089c90816100de8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063051adf121461047657806316345f181461044957806328734f491461042a5780635109d3d1146103b05780635f0e3f11146102b35780636579b73e1461027c578063715018a6146102135780638da5cb5b146101ed578063b8c400f0146101c5578063f0e0626f146101875763f2fde38b1461009957600080fd5b34610183576020366003190112610183578135916001600160a01b039182841680940361017f576100c86104df565b831561011657505082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b8382346101c15760203660031901126101c157602091816001600160a01b0391826101b06104c4565b168152603585522054169051908152f35b5080fd5b8382346101c157816003193601126101c1576020906001600160a01b03600154169051908152f35b8382346101c157816003193601126101c1576001600160a01b0360209254169051908152f35b833461027957806003193601126102795761022c6104df565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b8382346101c15760203660031901126101c157806020926001600160a01b036102a36104c4565b1681526036845220549051908152f35b509034610183576060366003190112610183576102ce6104c4565b91602435926001600160a01b03908185168095036103ac57604435936102f26104df565b6002548511610369575091606093917f89b115188dd337ce01bac8d633ca5f7264ea8c7b812085d6c5b3cacd5e7d3f639593169283875260356020528187208173ffffffffffffffffffffffffffffffffffffffff198254161790556036602052828288205581519384526020840152820152a180f35b606490602085519162461bcd60e51b8352820152601460248201527f696e76616c6964205f6d617850726963654167650000000000000000000000006044820152fd5b8580fd5b5090346101835760203660031901126101835735906001600160a01b038216809203610183577f6cff7fca5d8d3ff53de63073399d617b38b793a4e9d03d57dfe1ab2c88c477df916020916104036104df565b8173ffffffffffffffffffffffffffffffffffffffff19600154161760015551908152a180f35b8382346101c157816003193601126101c1576020906002549051908152f35b8382346101c15760203660031901126101c15760209061046f61046a6104c4565b610586565b9051908152f35b509034610183576020366003190112610183577fdbf066993ca6a3a38bfd6eb48f33d3ecd4f034d6f720786ec998d16a8a213bd29160209135906104b86104df565b8160025551908152a180f35b600435906001600160a01b03821682036104da57565b600080fd5b6001600160a01b036000541633036104f357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761055957604052565b634e487b7160e01b600052604160045260246000fd5b519069ffffffffffffffffffff821682036104da57565b6001600160a01b0390818116916000838152602091603583526040908183205416928151937ffeaf968c00000000000000000000000000000000000000000000000000000000855260049660a0868981855afa801561077e578596869161072c575b50420390428211610719578552603683528385205410156106155750505050506106129150610788565b90565b9091928481959650131561071557670de0b6b3a7640000948581029581870414901517156107025790808392879451948580927f313ce5670000000000000000000000000000000000000000000000000000000082525afa9182156106f9575083916106c0575b5060ff915016604d81116106ad57600a0a92831561069a5750500490565b906012602492634e487b7160e01b835252fd5b602482601186634e487b7160e01b835252fd5b905081813d83116106f2575b6106d68183610537565b810103126101c1575160ff811681036101c15760ff903861067c565b503d6106cc565b513d85823e3d90fd5b602484601188634e487b7160e01b835252fd5b8380fd5b60248660118b634e487b7160e01b835252fd5b96505060a0863d8211610776575b8161074760a09383610537565b8101031261017f576107588661056f565b508286015161076e60806060890151980161056f565b5095386105e8565b3d915061073a565b84513d87823e3d90fd5b6001546001600160a01b039081169190821561082257602460209260405194859384927f16345f180000000000000000000000000000000000000000000000000000000084521660048301525afa908115610816576000916107e8575090565b906020823d821161080e575b8161080160209383610537565b8101031261027957505190565b3d91506107f4565b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152601060248201527f507269636520697320746f6f206f6c64000000000000000000000000000000006044820152fdfea264697066735822122099b0c819b366ab7ae09bb36efa1caba5bd00cc8f724806afb1c86679be4e0ec664736f6c63430008120033",
  "deployedBytecode": "0x60406080815260048036101561001457600080fd5b600091823560e01c8063051adf121461047657806316345f181461044957806328734f491461042a5780635109d3d1146103b05780635f0e3f11146102b35780636579b73e1461027c578063715018a6146102135780638da5cb5b146101ed578063b8c400f0146101c5578063f0e0626f146101875763f2fde38b1461009957600080fd5b34610183576020366003190112610183578135916001600160a01b039182841680940361017f576100c86104df565b831561011657505082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b8382346101c15760203660031901126101c157602091816001600160a01b0391826101b06104c4565b168152603585522054169051908152f35b5080fd5b8382346101c157816003193601126101c1576020906001600160a01b03600154169051908152f35b8382346101c157816003193601126101c1576001600160a01b0360209254169051908152f35b833461027957806003193601126102795761022c6104df565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b8382346101c15760203660031901126101c157806020926001600160a01b036102a36104c4565b1681526036845220549051908152f35b509034610183576060366003190112610183576102ce6104c4565b91602435926001600160a01b03908185168095036103ac57604435936102f26104df565b6002548511610369575091606093917f89b115188dd337ce01bac8d633ca5f7264ea8c7b812085d6c5b3cacd5e7d3f639593169283875260356020528187208173ffffffffffffffffffffffffffffffffffffffff198254161790556036602052828288205581519384526020840152820152a180f35b606490602085519162461bcd60e51b8352820152601460248201527f696e76616c6964205f6d617850726963654167650000000000000000000000006044820152fd5b8580fd5b5090346101835760203660031901126101835735906001600160a01b038216809203610183577f6cff7fca5d8d3ff53de63073399d617b38b793a4e9d03d57dfe1ab2c88c477df916020916104036104df565b8173ffffffffffffffffffffffffffffffffffffffff19600154161760015551908152a180f35b8382346101c157816003193601126101c1576020906002549051908152f35b8382346101c15760203660031901126101c15760209061046f61046a6104c4565b610586565b9051908152f35b509034610183576020366003190112610183577fdbf066993ca6a3a38bfd6eb48f33d3ecd4f034d6f720786ec998d16a8a213bd29160209135906104b86104df565b8160025551908152a180f35b600435906001600160a01b03821682036104da57565b600080fd5b6001600160a01b036000541633036104f357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761055957604052565b634e487b7160e01b600052604160045260246000fd5b519069ffffffffffffffffffff821682036104da57565b6001600160a01b0390818116916000838152602091603583526040908183205416928151937ffeaf968c00000000000000000000000000000000000000000000000000000000855260049660a0868981855afa801561077e578596869161072c575b50420390428211610719578552603683528385205410156106155750505050506106129150610788565b90565b9091928481959650131561071557670de0b6b3a7640000948581029581870414901517156107025790808392879451948580927f313ce5670000000000000000000000000000000000000000000000000000000082525afa9182156106f9575083916106c0575b5060ff915016604d81116106ad57600a0a92831561069a5750500490565b906012602492634e487b7160e01b835252fd5b602482601186634e487b7160e01b835252fd5b905081813d83116106f2575b6106d68183610537565b810103126101c1575160ff811681036101c15760ff903861067c565b503d6106cc565b513d85823e3d90fd5b602484601188634e487b7160e01b835252fd5b8380fd5b60248660118b634e487b7160e01b835252fd5b96505060a0863d8211610776575b8161074760a09383610537565b8101031261017f576107588661056f565b508286015161076e60806060890151980161056f565b5095386105e8565b3d915061073a565b84513d87823e3d90fd5b6001546001600160a01b039081169190821561082257602460209260405194859384927f16345f180000000000000000000000000000000000000000000000000000000084521660048301525afa908115610816576000916107e8575090565b906020823d821161080e575b8161080160209383610537565b8101031261027957505190565b3d91506107f4565b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152601060248201527f507269636520697320746f6f206f6c64000000000000000000000000000000006044820152fdfea264697066735822122099b0c819b366ab7ae09bb36efa1caba5bd00cc8f724806afb1c86679be4e0ec664736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Chainlink Price Feed",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fallbackPriceFeed()": {
        "notice": "the fallback price feed in case the price is not available on Pyth"
      },
      "getLatestPrice(address)": {
        "notice": "Returns the latest price."
      }
    },
    "notice": "Contract to get the latest prices for multiple tokens from Chainlink",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1476,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9270,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "fallbackPriceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPriceFeed)10508"
      },
      {
        "astId": 9272,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "maxPriceAgeBound",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9357,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "__gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 9097,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "usdPriceFeeds",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_contract(IERC20)4216,t_contract(AggregatorV3Interface)45)"
      },
      {
        "astId": 9102,
        "contract": "contracts/wombat-core/asset/ChainlinkPriceFeed.sol:ChainlinkPriceFeed",
        "label": "maxPriceAge",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_contract(IERC20)4216,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)4216": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceFeed)10508": {
        "encoding": "inplace",
        "label": "contract IPriceFeed",
        "numberOfBytes": "20"
      },
      "t_mapping(t_contract(IERC20)4216,t_contract(AggregatorV3Interface)45)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4216",
        "label": "mapping(contract IERC20 => contract AggregatorV3Interface)",
        "numberOfBytes": "32",
        "value": "t_contract(AggregatorV3Interface)45"
      },
      "t_mapping(t_contract(IERC20)4216,t_uint256)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4216",
        "label": "mapping(contract IERC20 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}