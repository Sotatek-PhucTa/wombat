import assert from 'assert'
import { BatchFile, BatchTransaction, validateTransactionsInBatch } from './tx-builder'
import fs from 'fs'
import { network } from 'hardhat'

// File to be imported into Gnosis Safe.
const MULTISIG_JSON = 'multisig.json'

// Pending transactions during deployment
// TODO: integrate with deploy script to add pending transaction
// TODO: provide util to convert pending transactions to multisig.json
const PENDING_MULTISIG_JSON = '.pending-multisig.json'

// Write transactions to multisig.json that can be imported into Gnosis Safe.
// Overwrite existing file if the file already exists.
export function writeTransactionsToFile(transactions: BatchTransaction[]) {
  const batchFile: BatchFile = {
    version: '1.0.0',
    chainId: network.config.chainId?.toString() || '0',
    createdAt: Date.now(),
    meta: {
      name: 'Generated by multisig.ts',
    },
    transactions,
  }
  assert(validateTransactionsInBatch(batchFile), `Invalid transactions in batch file: ${JSON.stringify(batchFile)}`)
  fs.writeFileSync(MULTISIG_JSON, JSON.stringify(batchFile))
}
